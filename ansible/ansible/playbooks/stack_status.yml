---
- hosts: loadbalancer
  become: true
  gather_facts: false
  tasks:
    - name: verify nginx service
      command: service nginx status
      changed_when: false

    - name: verify nginx is listening on 80
      wait_for:
        port: 80
        timeout: 1

- hosts: webserver
  become: true
  gather_facts: false
  tasks:
    - name: verify nginx service
      command: service apache2 status
      changed_when: false

    - name: verify apache is listening on 80
      wait_for:
        port: 80
        timeout: 1

- hosts: database
  become: true
  tasks:
    - name: verify mysql service
      command: service mysql status
      changed_when: false

    - name: verify mysql is listening on 3306
      wait_for:
        host: "{{ ansible_eth1.ipv4.address }}"
        port: 3306
        timeout: 1

    - name: verify database exists
      shell: echo "show databases;" | mysql -h {{ groups.database[0] }}  -P3306 -u {{ db_user }} -p'{{ db_pass }}' {{ db_name }} | grep {{ db_name }}
      register: mysql_result
      changed_when: false

    - debug:
        var: mysql_result
        verbosity: 0

    - fail:
        msg: "Database is not accessible."
      when: item != db_name
      with_items: "{{ mysql_result.stdout_lines }}"

- hosts: control
  gather_facts: false
  tasks:
    - name: verify end-to-end response
      uri:
        url: http://{{ item }}
        return_content: yes
      with_items: "{{ groups.loadbalancer }}"
      register: lb_index

    - fail:
        msg: "index failed to return content"
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{ lb_index.results }}"

    - name: verify end-to-end db response
      uri:
        url: http://{{ item }}/db
        return_content: yes
      with_items: "{{ groups.loadbalancer }}"
      register: lb_db_index

    - fail:
        msg: "index failed to return content"
      when: "'Database Connected from' not in item.content"
      with_items: "{{ lb_db_index.results }}"

- hosts: loadbalancer
  gather_facts: false
  tasks:
    - name: verify end-to-end response
      uri:
        url: http://{{ item }}
        return_content: yes
      with_items: "{{ groups.webserver }}"
      register: app_index

    - fail:
        msg: "index failed to return content"
      when: "'Hello, from sunny {{ item.item }}!' not in item.content"
      with_items: "{{ app_index.results }}"

    - name: verify end-to-end db response
      uri:
        url: http://{{ item }}/db
        return_content: yes
      with_items: "{{ groups.webserver }}"
      register: app_db_index

    - fail:
        msg: "index failed to return content"
      when: "'Database Connected from {{ item.item }}!' not in item.content"
      with_items: "{{ app_db_index.results }}"
